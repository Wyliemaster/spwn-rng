type @rng;
extract obj_props;

let toggle_counter = @counter::new(1);

decrement = (rand: @counter)  {
    -> while_loop(() => toggle_counter == 0, () {
        rand -= 1;
        wait()
})}

increment = (rand: @counter)  {
    -> while_loop(() => toggle_counter == 1, () {
        rand += 1;
        wait();
})}


toggle_seed = (seed: @counter){
    if toggle_counter == 1{
        decrement(seed);
        wait();
        toggle_counter -= 1;

    }
    else if toggle_counter == 0 {
        increment(seed);
        wait();
        toggle_counter += 1;
    }
    wait();
}

rng = (seed: @number = 1, size: @number = 10) {
    let rand = @counter::new(seed);

    touch().on_triggered(!{
        wait();
        toggle_seed(rand);
    })

    -> while_loop(() => true, () {

        if rand >= size { rand -= size };
        wait();
        if rand <= 0 { rand += size };
        wait();

    })
    return rand;
}

return {
rng: rng,
}
